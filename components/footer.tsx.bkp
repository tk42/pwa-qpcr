// 経年劣化に耐える ReactComponent の書き方
// https://qiita.com/Takepepe/items/41e3e7a2f612d7eb094a
// https://blog.ojisan.io/storybook-first-develop/
// (1) import層
import React from 'react'
import styled from 'styled-components'
import Box from '@mui/material/Box';
import Tabs from '@mui/material/Tabs';
import Tab from '@mui/material/Tab';
import FormatListBulletedOutlinedIcon from '@mui/icons-material/FormatListBulletedOutlined';
import ViewComfyOutlinedIcon from '@mui/icons-material/ViewComfyOutlined';
import ColorizeOutlinedIcon from '@mui/icons-material/ColorizeOutlined';

// (2) Types層
type ContainerProps = {
}
type Props = {
    selectedTab: string
    handleClick: (event: React.SyntheticEvent<Element, Event>, value: number) => void
} & ContainerProps
// (3) DOM層
const Component: React.FC<Props> = props => (
    <Box sx={{
        position: 'absolute',
        bottom: 0,
        width: '100%'
    }}>
        <Tabs
            value={props.selectedTab}
            onChange={props.handleClick}
            variant="fullWidth"
        >
            <Tab icon={<FormatListBulletedOutlinedIcon />} />
            <Tab icon={<ViewComfyOutlinedIcon />} />
            <Tab icon={<ColorizeOutlinedIcon />} />
        </Tabs>
    </Box>
)
// (4) Style層
const StyledComponent = styled(Component)`
> h1 {
    font-size: 24px;
  }
`
// (5) Container層
export const Container: React.FC<ContainerProps> = props => {
    const [selectedTab, setSelectedTab] = React.useState(0);

    const handleClick = (event: React.SyntheticEvent<Element, Event>, value: number) => {
        setSelectedTab(value);
    };

    return <StyledComponent {...{
        selectedTab,
        handleClick,
        ...props,
    }} />
}